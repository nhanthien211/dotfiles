-- local wk = require("which-key")
-- NOTE: telescope keybinding
--
-- wk.add({
--   {
--     "<leader>f",
--     group = "Telescope",
--     { "<leader>ff", "<Cmd>Telescope find_files<CR>",     desc = "Find files" },
--     {
--       "<leader>fw",
--       function()
--         local conf = require("telescope.config").values
--         require("telescope.builtin").live_grep({
--           vimgrep_arguments = table.insert(conf.vimgrep_arguments, "--fixed-strings"),
--         })
--       end,
--       desc = "Find word (Live grep)",
--     },
--     { "<leader>fc", "<Cmd>Telescope colorscheme<CR>",    desc = "Find theme" },
--     { "<leader>fr", "<Cmd>Telescope lsp_references<CR>", desc = "Find reference" },
--     { "<leader>fi", "<Cmd>Telescope diagnostics<CR>",    desc = "Find code diagnostics" },
--     { "<leader>fe", "<Cmd>Telescope simulators run<CR>", desc = "Find simulators" },
--
--     -- Telescope plugins
--     { "<leader>fn", "<Cmd>Noice telescope<CR>",          desc = "Find Noice message" },
--     { "<leader>ft", "<Cmd>TodoTelescope<CR>",            desc = "Find todo" },
--     { "<leader>fy", "<Cmd>Telescope yank_history<CR>",   desc = "Find yank history" },
--     {
--       "<leader>fh",
--       function()
--         -- basic telescope configuration
--         local harpoon = require("harpoon")
--         local conf = require("telescope.config").values
--         local function toggle_telescope(harpoon_files)
--           local file_paths = {}
--           for _, item in ipairs(harpoon_files.items) do
--             table.insert(file_paths, item.value)
--           end
--
--           require("telescope.pickers")
--               .new({}, {
--                 prompt_title = "Harpoon",
--                 finder = require("telescope.finders").new_table({
--                   results = file_paths,
--                 }),
--                 previewer = conf.file_previewer({}),
--                 sorter = conf.generic_sorter({}),
--               })
--               :find()
--         end
--         toggle_telescope(harpoon:list())
--       end,
--       desc = "Find Harpoon list",
--     },
--     { "<leader>fl", "<Cmd>Telescope resume<CR>", desc = "Last Telescope session" },
--   },
-- })
--
-- NOTE: bufferline key mapping
--
-- wk.add({
--   {
--     "<leader>b",
--     group = "Bufferline",
--     { "<leader>bp", "<Cmd>BufferLineTogglePin<CR>",   desc = "Pin buffer" },
--     {
--       "<leader>bc",
--       function()
--         Snacks.bufdelete(0)
--       end,
--       desc = "Close tab",
--     },
--     { "<leader>bo", "<Cmd>BufferLineCloseOthers<CR>", desc = "Close other buffer" },
--     { "<leader>br", "<Cmd>BufferLineCloseRight<CR>",  desc = "Close right buffer" },
--     { "<leader>bl", "<Cmd>BufferLineCloseLeft<CR>",   desc = "Close left buffer" },
--   },
--   { "<leader>1", "<Cmd>BufferLineGoToBuffer 1<CR>", group = "Bufferline",    desc = "Go to buffer 1", hidden = true },
--   { "<leader>2", "<Cmd>BufferLineGoToBuffer 2<CR>", group = "Bufferline",    desc = "Go to buffer 2", hidden = true },
--   { "<leader>3", "<Cmd>BufferLineGoToBuffer 3<CR>", group = "Bufferline",    desc = "Go to buffer 3", hidden = true },
--   { "<leader>4", "<Cmd>BufferLineGoToBuffer 4<CR>", group = "Bufferline",    desc = "Go to buffer 4", hidden = true },
--   { "<leader>5", "<Cmd>BufferLineGoToBuffer 5<CR>", group = "Bufferline",    desc = "Go to buffer 5", hidden = true },
--   { "<leader>6", "<Cmd>BufferLineGoToBuffer 6<CR>", group = "Bufferline",    desc = "Go to buffer 6", hidden = true },
--   { "<leader>7", "<Cmd>BufferLineGoToBuffer 7<CR>", group = "Bufferline",    desc = "Go to buffer 7", hidden = true },
--   { "<leader>8", "<Cmd>BufferLineGoToBuffer 8<CR>", group = "Bufferline",    desc = "Go to buffer 8", hidden = true },
--   { "<leader>9", "<Cmd>BufferLineGoToBuffer 9<CR>", group = "Bufferline",    desc = "Go to buffer 9", hidden = true },
--   { "<Tab>",     "<Cmd>BufferLineCycleNext<CR>",    desc = "Next buffer" },
--   { "<S-Tab>",   "<Cmd>BufferLineCyclePrev<CR>",    desc = "Previous buffer" },
-- })
